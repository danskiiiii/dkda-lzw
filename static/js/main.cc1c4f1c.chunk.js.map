{"version":3,"sources":["common/SelectInput.js","common/TextInput.js","LZW.js","index.js"],"names":["SelectInput","_ref","inputRef","hasError","id","label","options","name","styles","isRequired","value","onChange","react_default","a","createElement","className","htmlFor","aria-hidden","style","asterisk","ref","concat","map","item","key","defaultProps","f","TextInput","formClassname","autoComplete","labelSrOnly","maxLength","placeholder","spellCheck","onKeyPress","type","LZW","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","evt","target","which","keyCode","txtInput","blur","handleStart","handleCreateInitialDictionary","handleChangeValue","_evt$target","setState","defineProperty","_this$state","state","initialDictInput","dictionary","some","w","prevState","toConsumableArray","dictInput","focus","_this$state2","initialText","joinedText","split","join","filter","x","includes","length","initialError","disableActions","decodedDict","encodeLoop","findNext","sliceLength","next","slice","word","prepareDecode","shouldDecode","window","scroll","top","document","body","scrollHeight","behavior","isDecoding","decodeLoop","_this$state3","code","step","slowMode","setTimeout","Number","newEntry","decodedSentence","_this$state4","nextWord","codeElementTxt","codeElement","indexOf","last","lastIndex","i","substr","initialState","_this2","_this$state5","common_SelectInput","Array","keys","marginBottom","checked","prev","width","height","marginTop","marginLeft","common_TextInput","input","disabled","onClick","idx","Fragment","color","React","Component","ReactDOM","render","LZW_LZW","getElementById"],"mappings":"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","file":"static/js/main.cc1c4f1c.chunk.js","sourcesContent":["import React from 'react';\n\nconst SelectInput = ({ inputRef, hasError, id, label, options, name, styles, isRequired, value, onChange }) => (\n  <div className=\"form-group\">\n    <label htmlFor={id}>{label}</label>\n\n    {isRequired && <i className=\"fa fa-asterisk\" aria-hidden=\"true\" style={styles.asterisk} />}\n\n    <select\n      ref={inputRef}\n      className={`form-control ${hasError ? 'is-invalid' : ''}`}\n      name={name}\n      id={id}\n      value={value}\n      onChange={onChange}>\n      <option>{}</option>\n      {options.map(item => (\n        <option key={item}>{item}</option>\n      ))}\n    </select>\n\n    {hasError ? <div className=\"invalid-feedback\">This field is required.</div> : <br />}\n  </div>\n);\n\nSelectInput.defaultProps = {\n  options: [],\n  styles: {},\n  hasError: false,\n  id: null,\n  inputRef: null,\n  isRequired: false,\n  label: '',\n  name: null,\n  onChange: f => f,\n};\n\nexport default SelectInput;\n","import React from 'react';\n\nconst TextInput = ({\n  formClassname,\n  autoComplete,\n  inputRef,\n  hasError,\n  id,\n  label,\n  labelSrOnly,\n  maxLength,\n  name,\n  styles,\n  placeholder,\n  spellCheck,\n  isRequired,\n  value,\n  onChange,\n  onKeyPress,\n}) => (\n  <div className={`form-group ${formClassname}`}>\n    <label htmlFor={id} className={labelSrOnly ? 'sr-only' : ''}>\n      {label}\n    </label>\n\n    {isRequired && <i className=\"fa fa-asterisk\" aria-hidden=\"true\" style={styles.asterisk} />}\n    <input\n      ref={inputRef}\n      className={`form-control ${hasError ? 'is-invalid' : ''}`}\n      autoComplete={autoComplete}\n      name={name}\n      value={value}\n      type=\"text\"\n      id={id}\n      maxLength={maxLength}\n      placeholder={placeholder}\n      spellCheck={spellCheck}\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n    />\n\n    {hasError ? <div className=\"invalid-feedback\">Uzupełnij słownik początkowy...</div> : <br />}\n  </div>\n);\n\nTextInput.defaultProps = {\n  styles: {},\n  formClassname: '',\n  autoComplete: 'random_string_off',\n  hasError: false,\n  id: null,\n  inputRef: null,\n  isRequired: false,\n  label: '',\n  labelSrOnly: false,\n  maxLength: 60,\n  name: null,\n  placeholder: '',\n  spellCheck: false,\n  value: '',\n  onChange: f => f,\n  onKeyPress: f => f,\n};\n\nexport default TextInput;\n","import { SelectInput, TextInput } from './common';\n\nimport React from 'react';\n\nexport default class LZW extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      dictionary: [],\n      code: [],\n      decodedDict: [],\n      step: 1,\n      slowMode: 0,\n      initialDictInput: '',\n      initialText: '',\n      initialError: false,\n      disableActions: false,\n      shouldDecode: true,\n      isDecoding: false,\n      decodedSentence: '',\n      joinedText: '',\n    };\n\n    this.state = this.initialState;\n  }\n\n  handleKeyPress = evt => {\n    const { target, which, keyCode } = evt;\n\n    if (which === 13 || keyCode === 13) {\n      switch (target.name) {\n        case 'initialText':\n          this.txtInput.blur();\n          this.handleStart();\n          break;\n\n        case 'initialDictInput':\n          this.handleCreateInitialDictionary();\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  handleChangeValue = evt => {\n    const { name, value } = evt.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleCreateInitialDictionary = () => {\n    const { initialDictInput, dictionary } = this.state;\n\n    if (initialDictInput && !dictionary.some(w => w === initialDictInput)) {\n      this.setState(\n        prevState => ({\n          dictionary: [...prevState.dictionary, initialDictInput],\n          initialDictInput: '',\n        }),\n        () => this.dictInput.focus()\n      );\n    }\n  };\n\n  handleStart = () => {\n    const { initialText, dictionary } = this.state;\n\n    const joinedText = initialText.split(' ').join('-');\n    const diff = joinedText.split('').filter(x => !dictionary.includes(x));\n\n    if (diff.length) {\n      this.setState({ initialError: true });\n\n      return;\n    }\n\n    this.setState({ initialError: false, joinedText, disableActions: true, decodedDict: dictionary }, this.encodeLoop);\n  };\n\n  findNext = (joinedText, dictionary) => {\n    let sliceLength = 2;\n    let next = '';\n    while (true) {\n      next = joinedText.slice(0, sliceLength);\n      const needBiggerSlice = dictionary.some(word => word === next); //eslint-disable-line\n      if (needBiggerSlice && !(next === joinedText)) {\n        sliceLength++;\n        next = '';\n      } else {\n        return next;\n      }\n    }\n  };\n\n  prepareDecode = () => {\n    const { shouldDecode } = this.state;\n    if (shouldDecode) {\n      window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n      this.setState({ isDecoding: true }, this.decodeLoop);\n    }\n  };\n\n  decodeLoop = () => {\n    const { code, step, slowMode } = this.state;\n\n    setTimeout(() => {}, step * 100 + 500 * Number(slowMode));\n\n    if (step < code.length + 1) {\n      setTimeout(() => {\n        this.setState(prevState => {\n          let newEntry = prevState.decodedDict[code[step - 1]];\n\n          if (typeof newEntry === 'undefined') {\n            newEntry = prevState.decodedDict[code[step - 2]].concat(prevState.decodedDict[code[step - 2]][0]);\n          }\n\n          return {\n            decodedDict:\n              step > 1\n                ? [...prevState.decodedDict, prevState.decodedDict[code[step - 2]].concat(newEntry[0])]\n                : prevState.decodedDict,\n            decodedSentence: prevState.decodedSentence.concat(newEntry),\n            step: prevState.step + 1,\n          };\n        });\n      }, step * 100 + 500 + 500 * Number(slowMode));\n\n      setTimeout(() => {\n        window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n        this.decodeLoop();\n      }, step * 100 + 1000 + 500 * Number(slowMode));\n    }\n  };\n\n  encodeLoop = () => {\n    const { dictionary, joinedText, step, slowMode } = this.state;\n\n    let nextWord = '';\n    nextWord = this.findNext(joinedText, dictionary);\n\n    if (!nextWord) {\n      this.setState({ step: 1, disableActions: false });\n      return;\n    }\n\n    setTimeout(() => {}, step * 100 + 500 * Number(slowMode));\n\n    setTimeout(() => {\n      this.setState(prevState => {\n        let codeElementTxt =\n          prevState.joinedText.length > nextWord.length ? nextWord.slice(0, nextWord.length - 1) : nextWord;\n        let codeElement = prevState.dictionary.indexOf(codeElementTxt);\n        let last = '';\n        let lastIndex = -1;\n        if (codeElement === -1) {\n          let i = 0;\n          while (codeElement === -1) {\n            i++;\n            codeElement = prevState.dictionary.indexOf(codeElementTxt.slice(0, codeElementTxt.length - i));\n          }\n          last = prevState.joinedText.slice(-1 * i);\n          lastIndex = prevState.dictionary.indexOf(last);\n        }\n        return {\n          joinedText: prevState.joinedText.substr(nextWord.length - 1, prevState.joinedText.length),\n          code: last.length ? [...prevState.code, codeElement, lastIndex] : [...prevState.code, codeElement],\n          dictionary: !prevState.dictionary.some(w => w === nextWord)\n            ? [...prevState.dictionary, nextWord]\n            : prevState.dictionary,\n        };\n      });\n    }, step * 100 + 500 + 500 * Number(slowMode));\n\n    setTimeout(() => {\n      this.setState(prevState => ({ step: prevState.step + 1 }));\n\n      if (this.state.joinedText.length > 1) {\n        window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n        this.encodeLoop();\n      } else {\n        this.setState({ step: 1, disableActions: false, joinedText: 'SŁOWNIK KOŃCOWY:' }, this.prepareDecode);\n      }\n    }, step * 100 + 1000 + 500 * Number(slowMode));\n  };\n\n  render() {\n    const {\n      code,\n      decodedDict,\n      isDecoding,\n      decodedSentence,\n      dictionary,\n      disableActions,\n      initialDictInput,\n      initialText,\n      initialError,\n      joinedText,\n      slowMode,\n      shouldDecode,\n    } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <h1>Lempel–Ziv–Welch</h1>\n\n        <div className=\"section slow\">\n          <p>Spowolnienie:&nbsp;</p>\n          <SelectInput\n            name=\"slowMode\"\n            options={[...Array(10).keys()]}\n            value={slowMode}\n            onChange={this.handleChangeValue}\n          />\n        </div>\n\n        <div className=\"form-check\" style={{ marginBottom: 40 }}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            checked={shouldDecode}\n            id=\"decodeCheck\"\n            onChange={() => this.setState(prev => ({ shouldDecode: !prev.shouldDecode }))}\n            style={{ width: 20, height: 20, marginTop: 10 }}\n          />\n          <label className=\"form-check-label\" style={{ marginLeft: 10 }} htmlFor=\"decodeCheck\">\n            Dekoduj po zakończeniu\n          </label>\n        </div>\n\n        <div className=\"section\">\n          <TextInput\n            inputRef={input => (this.dictInput = input)}\n            formClassname=\"initial-dict\"\n            label=\"Stwórz słownik początkowy:\"\n            name=\"initialDictInput\"\n            maxLength={1}\n            placeholder=\"Dodaj literę\"\n            value={initialDictInput}\n            onChange={this.handleChangeValue}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-success add\"\n            disabled={disableActions}\n            onClick={this.handleCreateInitialDictionary}>\n            Dodaj\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger clean\"\n            disabled={disableActions}\n            onClick={() => this.setState(this.initialState)}>\n            <i className=\"fa fa-trash fa-lg\" aria-hidden=\"true\" />\n          </button>\n        </div>\n\n        <div className=\"section\">\n          <TextInput\n            inputRef={input => (this.txtInput = input)}\n            formClassname=\"initial-txt\"\n            hasError={initialError}\n            label=\"Tekst do zakodowania:\"\n            name=\"initialText\"\n            maxLength={100}\n            placeholder=\"Wpisz tekst\"\n            value={initialText}\n            onChange={this.handleChangeValue}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button type=\"button\" className=\"btn btn-warning\" disabled={disableActions} onClick={this.handleStart}>\n            Rozpocznij\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger clean\"\n            disabled={disableActions}\n            onClick={() => this.setState(this.initialState)}>\n            <i className=\"fa fa-trash fa-lg\" aria-hidden=\"true\" />\n          </button>\n        </div>\n\n        {!shouldDecode && <h2>{code.join(', ')}</h2>}\n\n        <h3>{joinedText}</h3>\n\n        <div className=\"dictionary\">\n          {dictionary.map((item, idx) => (\n            <p className=\"word\" key={idx}>{`${idx} = ${item}`}</p>\n          ))}\n        </div>\n\n        {shouldDecode && (\n          <>\n            <h2 style={{ marginTop: 30 }}>{code.join(', ')}</h2>\n\n            {isDecoding && (\n              <>\n                <h3 style={{ color: 'orange' }}>{decodedSentence}</h3>\n                <div className=\"dictionary\">\n                  {decodedDict.map((item, idx) => (\n                    <p className=\"word\" key={idx}>{`${idx} = ${item}`}</p>\n                  ))}\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport LZW from './LZW';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<LZW />, document.getElementById('root'));\n"],"sourceRoot":""}