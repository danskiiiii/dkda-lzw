{"version":3,"sources":["common/SelectInput.js","common/TextInput.js","LZW.js","index.js","Home.js"],"names":["SelectInput","_ref","inputRef","hasError","id","label","options","name","styles","isRequired","value","onChange","react_default","a","createElement","className","htmlFor","aria-hidden","style","asterisk","ref","concat","map","item","key","defaultProps","f","TextInput","formClassname","autoComplete","labelSrOnly","maxLength","placeholder","spellCheck","onKeyPress","type","LZW","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","evt","target","which","keyCode","txtInput","blur","handleStart","handleCreateInitialDictionary","handleChangeValue","_evt$target","setState","defineProperty","_this$state","state","initialDictInput","dictionary","some","w","prevState","toConsumableArray","dictInput","focus","_this$state2","initialText","length","joinedText","split","join","disableActions","decodedDict","encodeLoop","initialError","findNext","sliceLength","next","slice","word","prepareDecode","shouldDecode","window","scroll","top","document","body","scrollHeight","behavior","isDecoding","decodeLoop","_this$state3","code","step","slowMode","setTimeout","Number","newEntry","decodedSentence","_this$state4","nextWord","codeElementTxt","codeElement","indexOf","substr","initialState","_this2","_this$state5","react_router_dom","to","common_SelectInput","Array","keys","marginBottom","checked","prev","width","height","marginTop","marginLeft","common_TextInput","input","disabled","onClick","idx","Fragment","color","React","Component","__webpack_require__","d","__webpack_exports__","PATHS","ReactDOM","render","react_router","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.3c7d0f1c.chunk.js","sourcesContent":["import React from 'react';\n\nconst SelectInput = ({ inputRef, hasError, id, label, options, name, styles, isRequired, value, onChange }) => (\n  <div className=\"form-group\">\n    <label htmlFor={id}>{label}</label>\n\n    {isRequired && <i className=\"fa fa-asterisk\" aria-hidden=\"true\" style={styles.asterisk} />}\n\n    <select\n      ref={inputRef}\n      className={`form-control ${hasError ? 'is-invalid' : ''}`}\n      name={name}\n      id={id}\n      value={value}\n      onChange={onChange}>\n      <option>{}</option>\n      {options.map(item => (\n        <option key={item}>{item}</option>\n      ))}\n    </select>\n\n    {hasError ? <div className=\"invalid-feedback\">This field is required.</div> : <br />}\n  </div>\n);\n\nSelectInput.defaultProps = {\n  options: [],\n  styles: {},\n  hasError: false,\n  id: null,\n  inputRef: null,\n  isRequired: false,\n  label: '',\n  name: null,\n  onChange: f => f,\n};\n\nexport default SelectInput;\n","import React from 'react';\n\nconst TextInput = ({\n  formClassname,\n  autoComplete,\n  inputRef,\n  hasError,\n  id,\n  label,\n  labelSrOnly,\n  maxLength,\n  name,\n  styles,\n  placeholder,\n  spellCheck,\n  isRequired,\n  value,\n  onChange,\n  onKeyPress,\n}) => (\n  <div className={`form-group ${formClassname}`}>\n    <label htmlFor={id} className={labelSrOnly ? 'sr-only' : ''}>\n      {label}\n    </label>\n\n    {isRequired && <i className=\"fa fa-asterisk\" aria-hidden=\"true\" style={styles.asterisk} />}\n    <input\n      ref={inputRef}\n      className={`form-control ${hasError ? 'is-invalid' : ''}`}\n      autoComplete={autoComplete}\n      name={name}\n      value={value}\n      type=\"text\"\n      id={id}\n      maxLength={maxLength}\n      placeholder={placeholder}\n      spellCheck={spellCheck}\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n    />\n\n    {hasError ? <div className=\"invalid-feedback\">Trzeba by coś tutaj wpisać...</div> : <br />}\n  </div>\n);\n\nTextInput.defaultProps = {\n  styles: {},\n  formClassname: '',\n  autoComplete: 'random_string_off',\n  hasError: false,\n  id: null,\n  inputRef: null,\n  isRequired: false,\n  label: '',\n  labelSrOnly: false,\n  maxLength: 60,\n  name: null,\n  placeholder: '',\n  spellCheck: false,\n  value: '',\n  onChange: f => f,\n  onKeyPress: f => f,\n};\n\nexport default TextInput;\n","import { SelectInput, TextInput } from './common';\n\nimport { Link } from 'react-router-dom';\nimport React from 'react';\n\nexport default class LZW extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      dictionary: [],\n      code: [],\n      decodedDict: [],\n      step: 1,\n      slowMode: 0,\n      initialDictInput: '',\n      initialText: '',\n      initialError: false,\n      disableActions: false,\n      shouldDecode: true,\n      isDecoding: false,\n      decodedSentence: '',\n      joinedText: '',\n    };\n\n    this.state = this.initialState;\n  }\n\n  handleKeyPress = evt => {\n    const { target, which, keyCode } = evt;\n\n    if (which === 13 || keyCode === 13) {\n      switch (target.name) {\n        case 'initialText':\n          this.txtInput.blur();\n          this.handleStart();\n          break;\n\n        case 'initialDictInput':\n          this.handleCreateInitialDictionary();\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  handleChangeValue = evt => {\n    const { name, value } = evt.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleCreateInitialDictionary = () => {\n    const { initialDictInput, dictionary } = this.state;\n\n    if (initialDictInput && !dictionary.some(w => w === initialDictInput)) {\n      this.setState(\n        prevState => ({\n          dictionary: [...prevState.dictionary, initialDictInput],\n          initialDictInput: '',\n        }),\n        () => this.dictInput.focus()\n      );\n    }\n  };\n\n  handleStart = () => {\n    const { initialText, dictionary } = this.state;\n\n    if (!initialText.length) {\n      this.setState({ initialError: true });\n      return;\n    }\n\n    const joinedText = initialText.split(' ').join('-');\n\n    this.setState({ joinedText, disableActions: true, decodedDict: dictionary }, this.encodeLoop);\n  };\n\n  findNext = (joinedText, dictionary) => {\n    let sliceLength = 2;\n    let next = '';\n    while (true) {\n      next = joinedText.slice(0, sliceLength);\n      const needBiggerSlice = dictionary.some(word => word === next); //eslint-disable-line\n      if (needBiggerSlice && !(next === joinedText)) {\n        sliceLength++;\n        next = '';\n      } else {\n        return next;\n      }\n    }\n  };\n\n  prepareDecode = () => {\n    const { shouldDecode } = this.state;\n    if (shouldDecode) {\n      window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n      this.setState({ isDecoding: true }, this.decodeLoop);\n    }\n  };\n\n  decodeLoop = () => {\n    const { code, step, slowMode } = this.state;\n\n    setTimeout(() => {}, step * 100 + 500 * Number(slowMode));\n\n    if (step < code.length + 1) {\n      setTimeout(() => {\n        this.setState(prevState => {\n          let newEntry = prevState.decodedDict[code[step - 1]];\n\n          if (typeof newEntry === 'undefined') {\n            newEntry = prevState.decodedDict[code[step - 2]].concat(prevState.decodedDict[code[step - 2]][0]);\n          }\n\n          return {\n            decodedDict:\n              step > 1\n                ? [...prevState.decodedDict, prevState.decodedDict[code[step - 2]].concat(newEntry[0])]\n                : prevState.decodedDict,\n            decodedSentence: prevState.decodedSentence.concat(newEntry),\n            step: prevState.step + 1,\n          };\n        });\n      }, step * 100 + 500 + 500 * Number(slowMode));\n\n      setTimeout(() => {\n        window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n        this.decodeLoop();\n      }, step * 100 + 1000 + 500 * Number(slowMode));\n    }\n  };\n\n  encodeLoop = () => {\n    const { dictionary, joinedText, step, slowMode } = this.state;\n\n    let nextWord = '';\n    nextWord = this.findNext(joinedText, dictionary);\n\n    if (!nextWord) {\n      this.setState({ step: 1, disableActions: false });\n      return;\n    }\n\n    setTimeout(() => {}, step * 100 + 500 * Number(slowMode));\n\n    setTimeout(() => {\n      this.setState(prevState => {\n        const codeElementTxt =\n          prevState.joinedText.length > nextWord.length ? nextWord.slice(0, nextWord.length - 1) : nextWord;\n        const codeElement = prevState.dictionary.indexOf(codeElementTxt);\n\n        return {\n          joinedText: prevState.joinedText.substr(nextWord.length - 1, prevState.joinedText.length),\n          code: codeElement !== -1 ? [...prevState.code, codeElement] : prevState.code,\n          dictionary: !prevState.dictionary.some(w => w === nextWord)\n            ? [...prevState.dictionary, nextWord]\n            : prevState.dictionary,\n        };\n      });\n    }, step * 100 + 500 + 500 * Number(slowMode));\n\n    setTimeout(() => {\n      this.setState(prevState => ({ step: prevState.step + 1 }));\n\n      if (this.state.joinedText.length > 1) {\n        window.scroll({ top: document.body.scrollHeight, behavior: 'smooth' });\n        this.encodeLoop();\n      } else {\n        this.setState({ step: 1, disableActions: false, joinedText: 'SŁOWNIK KOŃCOWY:' }, this.prepareDecode);\n      }\n    }, step * 100 + 1000 + 500 * Number(slowMode));\n  };\n\n  render() {\n    const {\n      code,\n      decodedDict,\n      isDecoding,\n      decodedSentence,\n      dictionary,\n      disableActions,\n      initialDictInput,\n      initialText,\n      initialError,\n      joinedText,\n      slowMode,\n      shouldDecode,\n    } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <Link to=\"/\">\n          <i className=\"fa fa-long-arrow-left fa-lg top-left\" />\n        </Link>\n\n        <h1>Lempel–Ziv–Welch</h1>\n\n        <div className=\"section slow\">\n          <p>Spowolnienie:&nbsp;</p>\n          <SelectInput\n            name=\"slowMode\"\n            options={[...Array(10).keys()]}\n            value={slowMode}\n            onChange={this.handleChangeValue}\n          />\n        </div>\n\n        <div className=\"form-check\" style={{ marginBottom: 40 }}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            checked={shouldDecode}\n            id=\"decodeCheck\"\n            onChange={() => this.setState(prev => ({ shouldDecode: !prev.shouldDecode }))}\n            style={{ width: 20, height: 20, marginTop: 10 }}\n          />\n          <label className=\"form-check-label\" style={{ marginLeft: 10 }} htmlFor=\"decodeCheck\">\n            Dekoduj po zakończeniu\n          </label>\n        </div>\n\n        <div className=\"section\">\n          <TextInput\n            inputRef={input => (this.dictInput = input)}\n            formClassname=\"initial-dict\"\n            label=\"Stwórz słownik początkowy:\"\n            name=\"initialDictInput\"\n            maxLength={1}\n            placeholder=\"Dodaj literę\"\n            value={initialDictInput}\n            onChange={this.handleChangeValue}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button\n            type=\"button\"\n            className=\"btn btn-success add\"\n            disabled={disableActions}\n            onClick={this.handleCreateInitialDictionary}>\n            Dodaj\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger clean\"\n            disabled={disableActions}\n            onClick={() => this.setState(this.initialState)}>\n            <i className=\"fa fa-trash fa-lg\" aria-hidden=\"true\" />\n          </button>\n        </div>\n\n        <div className=\"section\">\n          <TextInput\n            inputRef={input => (this.txtInput = input)}\n            formClassname=\"initial-txt\"\n            hasError={initialError ? initialText.length === 0 : false}\n            label=\"Tekst do zakodowania:\"\n            name=\"initialText\"\n            maxLength={100}\n            placeholder=\"Wpisz tekst\"\n            value={initialText}\n            onChange={this.handleChangeValue}\n            onKeyPress={this.handleKeyPress}\n          />\n          <button type=\"button\" className=\"btn btn-warning\" disabled={disableActions} onClick={this.handleStart}>\n            Rozpocznij\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger clean\"\n            disabled={disableActions}\n            onClick={() => this.setState(this.initialState)}>\n            <i className=\"fa fa-trash fa-lg\" aria-hidden=\"true\" />\n          </button>\n        </div>\n\n        {!shouldDecode && <h2>{code.join(', ')}</h2>}\n\n        <h3>{joinedText}</h3>\n\n        <div className=\"dictionary\">\n          {dictionary.map((item, idx) => (\n            <p className=\"word\" key={idx}>{`${idx} = ${item}`}</p>\n          ))}\n        </div>\n\n        {shouldDecode && (\n          <>\n            <h2 style={{ marginTop: 30 }}>{code.join(', ')}</h2>\n\n            {isDecoding && (\n              <>\n                <h3 style={{ color: 'orange' }}>{decodedSentence}</h3>\n                <div className=\"dictionary\">\n                  {decodedDict.map((item, idx) => (\n                    <p className=\"word\" key={idx}>{`${idx} = ${item}`}</p>\n                  ))}\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// import Elias from './Elias';\nimport Home from './Home';\nimport LZW from './LZW';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport const PATHS = ['LZW'];\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path={`/${PATHS[0]}`} component={LZW} />\n      {/* <Route exact path={`/${PATHS[1]}`} component={Elias} /> */}\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","import { Link } from 'react-router-dom';\nimport { PATHS } from '.';\nimport React from 'react';\n\nexport default function Home(props) {\n  return (\n    <div className=\"home\">\n      <h1>Algorytmy kompresji danych</h1>\n      {PATHS.map(path => (\n        <Link key={path} className=\"btn btn-light home\" to={path}>\n          {path}\n        </Link>\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""}